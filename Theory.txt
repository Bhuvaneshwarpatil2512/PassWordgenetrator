We are creating a password generator using react

step1: -->app.js 
        import { useState, useCallback, useEffect, useRef } from 'react'
        function App() {
            return (
            <div className="w-full max-w-md mx-auto shadow-md rounded-lg px-4 py-3 my-8 bg-gray-800 text-orange-500">
            <h1 className='text-white text-center my-3'>Password generator</h1>
            <div className="flex shadow rounded-lg overflow-hidden mb-4">
                <input
                    type="text"
                    value={password} --> its a useState value
                    className="outline-none w-full py-1 px-3"
                    placeholder="Password"
                    readOnly --> it define to read Only we can not change it
                    ref={passwordRef} -- > refrence from useref hook and it null right now
                />
                <button --> Button that is for Copying the password that is generated
                onClick={copyPasswordToClipboard} its an on click event which is calling function
                className='outline-none bg-blue-700 text-white px-3 py-0.5 shrink-0'
                >copy</button>
                
            </div> --> its for the range selector
            <div className='flex text-sm gap-x-2'>
            <div className='flex items-center gap-x-1'>
                <input 
                type="range"
                min={6}
                max={100}
                value={length}
                className='cursor-pointer'
                onChange={(e) => {setLength(e.target.value)}}
                />
                <label>Length: {length}</label>
            </div>
            <div className="flex items-center gap-x-1">
            <input
                type="checkbox"
                defaultChecked={numberAllowed}
                id="numberInput"
                onChange={() => {
                    setNumberAllowed((prev) => !prev);
                }}
            />
            <label htmlFor="numberInput">Numbers</label>
            </div>
            <div className="flex items-center gap-x-1">
                <input
                    type="checkbox"
                    defaultChecked={charAllowed}
                    id="characterInput"
                    onChange={() => {
                        setCharAllowed((prev) => !prev )
                    }}
                />
                <label htmlFor="characterInput">Characters</label>
            </div>
            </div>
        </div>
            
        )
        }

        export default App
      